# The MIT License (MIT)
# Copyright (c) 2021 by the xcube development team and contributors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from xcube.constants import EXTENSION_POINT_DATA_OPENERS
from xcube.constants import EXTENSION_POINT_DATA_STORES
from xcube.util import extension
from xcube_cci.constants import DATASET_OPENER_ID
from xcube_cci.constants import DATA_STORE_ID
from xcube_cci.constants import ZARR_DATA_STORE_ID


def init_plugin(ext_registry: extension.ExtensionRegistry):
    """xcube CCI ODP extensions"""
    data_store_notice_content = \
        'The ESA CCI Open Data Portal (ODP) utilises an "[ontology]' \
        '(http://vocab-test.ceda.ac.uk/ontology/cci/cci-content/index.html) ' \
        'whose terms might slightly differ from the ones used in this ' \
        'software.\nFor example, a *Dataset* in the CCI terminology may ' \
        'refer to all data products generated by a certain CCI project using ' \
        'a specific configuration of algorithms and auxiliary data.\n' \
        'In this software, a *Data Source* refers to a subset (a file set) ' \
        'of a given ODP dataset whose data share a common spatio-temporal ' \
        'grid and/or share other common properties, e.g. the instrument ' \
        'used for the original measurements.\n' \
        'In addition, the term *Dataset* is used to represent in-memory ' \
        'instances of gridded data sources or subsets of them.'
    data_completeness_content = \
        'This data store currently provides **only a subset of all ' \
        'datasets** provided by the "ESA CCI Open Data Portal (ODP), ' \
        'namely gridded datasets originally stored in NetCDF format.\n' \
        'In upcoming versions, the store will also allow for browsing and ' \
        'accessing the remaining ODP datasets. This includes gridded data in ' \
        'TIFF format and also vector data using ESRI Shapefile format.\n' \
        'For the time being users can download the missing vector data from ' \
        'the ODP FTP server](http://cci.esa.int/data#ftp) ' \
        '`ftp://anon-ftp.ceda.ac.uk/neodc/esacci/`\n' \
        '* CCI Glaciers in FTP directory `glaciers`\n' \
        '* CCI Ice Sheets in FTP directories `ice_sheets_antarctica` and ' \
        '`ice_sheets_greenland'
    ext_registry.add_extension(
        loader=extension.import_component(
            'xcube_cci.dataaccess:CciOdpDataStore'),
        point=EXTENSION_POINT_DATA_STORES,
        name=DATA_STORE_ID,
        description='ESA CCI Open Data Portal',
        data_store_notices=[dict(id='terminologyClarification',
                                 title='Terminology Clarification',
                                 content=data_store_notice_content,
                                 intent='primary',
                                 icon='info-sign'),
                            dict(id='dataCompleteness',
                                 title='Data Completeness',
                                 content=data_completeness_content,
                                 intent='warning',
                                 icon='warning-sign')])
    ext_registry.add_extension(
        loader=extension.import_component(
            'xcube_cci.dataaccess:CciOdpDatasetOpener'),
        point=EXTENSION_POINT_DATA_OPENERS,
        name=DATASET_OPENER_ID,
        description='xarray.Dataset in Zarr format'
                    ' from ESA CCI Open Data Portal'
    )
    ext_registry.add_extension(
        loader=extension.import_component(
            'xcube_cci.zarraccess:CciZarrDataStore'),
        point=EXTENSION_POINT_DATA_STORES,
        name=ZARR_DATA_STORE_ID,
        description='xarray.Dataset in Zarr format'
                    ' from ESA CCI Object Storage'
    )
